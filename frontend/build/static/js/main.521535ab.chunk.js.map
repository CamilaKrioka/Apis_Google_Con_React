{"version":3,"sources":["iniciadores/firebase.js","components/AuthElements.js","container/Login.js","iniciadores/actions.js","components/AppNav.js","components/AlbumCard.js","animations/Box.js","components/AlbumList.js","container/Albums.js","components/PhotosCarrousel.js","components/PhotosList.js","container/Album.js","App.js","serviceWorker.js","iniciadores/store.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","withStyles","container","display","flexDirection","props","className","classes","user","Avatar","key","src","providerData","photoURL","IconButton","color","onClick","logout","Button","variant","login","Login","bind","console","log","this","token","provider","auth","GoogleAuthProvider","addScope","signInWithPopup","then","result","credential","accessToken","saveToken","catch","err","signOut","clearToken","Component","mapDispatchToProps","type","connect","state","AppNav","AppBar","position","Toolbar","nav","Typography","component","grow","flexGrow","textAlign","item","minWidth","margin","boxSizing","cursor","media","minHeight","Card","setAlbum","album","CardMedia","image","coverPhotoBaseUrl","CardContent","glutterbottom","title","mediaItemsCount","posed","div","enter","opacity","height","delay","exit","Grid","spacing","justify","albums","map","index","Box","pose","mainAlbum","Albums","loadPhotos","axios","url","method","headers","r","setAlbums","data","AlbumList","clearAlbums","justifyContent","padding","img","maxWidth","card","marginRight","photos","photo","id","baseUrl","alt","filename","topSpace","marginTop","clearAlbum","clearPhotos","length","Album","prevProps","Authorization","albumId","setPhotos","mediaItems","App","Boolean","window","location","hostname","match","rootReducer","combineReducers","action","mainEnhancer","compose","persistState","createStore","onAuthStateChanged","store","dispatch","setUser","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.521535ab.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDDRJrShC7uH4IdgjNJXNTSVdz0y3s8Xe8\",\r\n  authDomain: \"portfolio-ed9c4.firebaseapp.com\",\r\n  databaseURL: \"https://portfolio-ed9c4.firebaseio.com\",\r\n  projectId: \"portfolio-ed9c4\",\r\n  storageBucket: \"portfolio-ed9c4.appspot.com\",\r\n  messagingSenderId: \"243402962460\",\r\n  appId: \"1:243402962460:web:fda8d5e98dd8ff93d211d9\",\r\n  measurementId: \"G-N3DZ4K4LEY\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\nexport default firebase;\r\n","import React from 'react';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { withStyles } from \"@material-ui/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ExitToApp from '@material-ui/icons/ExitToApp';\r\n\r\nconst AuthElements = function(props){\r\n   const logInButton=()=> {\r\n        if (props.user) return(\r\n    [<Avatar key='auth-album-element' src={props.user.providerData[0].photoURL} />, \r\n    <IconButton key='auth-sign-out-button'color= \"inherit\" onClick={props.logout}><ExitToApp /></IconButton>]\r\n         );\r\n    \r\n        return (\r\n          <Button variant=\"contained\" onClick={props.login}>\r\n            inciar sesion\r\n          </Button>\r\n        );\r\n      }\r\n    \r\n       return( \r\n       <div className={props.classes.container}>\r\n            {logInButton()}\r\n       </div>\r\n      );\r\n    }\r\n\r\n    export default withStyles({\r\n        container:{\r\n            display: 'flex',\r\n            flexDirection: 'row'\r\n        }\r\n    }) (AuthElements);","import React, { Component } from \"react\";\r\nimport firebase from \"../iniciadores/firebase\";\r\n\r\nimport {connect} from 'react-redux';\r\nimport {saveToken } from '../iniciadores/actions';\r\nimport { clearToken } from '../iniciadores/actions';\r\nimport AuthElements from \"../components/AuthElements\";\r\n\r\n\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.login = this.login.bind(this);\r\n    this.logout = this.logout.bind(this);\r\n  }\r\n\r\n  componentDidMount(){\r\n    console.log(this.props.token);\r\n  }\r\n\r\n  login() {\r\n    let provider = new firebase.auth.GoogleAuthProvider();\r\n    provider.addScope(\"https://www.googleapis.com/auth/photoslibrary.readonly\");\r\n\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        let token = result.credential.accessToken;\r\n        this.props.saveToken(token);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  logout(){\r\n      firebase.auth().signOut().then(() =>{\r\n          this.props.clearToken();\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <AuthElements\r\n    login={this.login}\r\n    logout={this.logout}\r\n    token= {this.props.token}\r\n    user={this.props.user}\r\n    />\r\n    )}\r\n}\r\n\r\nconst mapStateToProps = (state)=>{\r\n    return{\r\n        token: state.token,\r\n        user: state.user\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    saveToken,\r\n    clearToken\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps) (Login);\r\n\r\n","export const saveToken = (token) =>{\r\n    return{\r\n        type: 'SET_TOKEN',\r\n        token: token\r\n    }\r\n}\r\n\r\nexport const clearToken = () =>{\r\n    return{\r\n        type: 'CLEAR_TOKEN'\r\n    }\r\n}\r\n\r\nexport const setUser = (user)=>{\r\n    return{\r\n        type: 'LOGGED_IN',\r\n        user\r\n    }\r\n}\r\n\r\nexport const clearUser = ()=>{\r\n    return{\r\n        type: 'SIGN_OUT'\r\n    }\r\n}\r\n\r\nexport const setAlbums = (albums) =>{\r\n    return{\r\n        type: 'SET_ALBUMS',\r\n        albums\r\n    }\r\n}\r\nexport const clearAlbums = () =>{\r\n    return{\r\n        type: 'CLEAR_ALBUMS',\r\n        \r\n    }\r\n}\r\n\r\nexport const setAlbum = (album) =>{\r\n    return{\r\n        type: 'SET_ALBUM',\r\n        album\r\n    }\r\n}\r\nexport const clearAlbum = () =>{\r\n    return{\r\n        type: 'CLEAR_ALBUM',\r\n        \r\n    }\r\n}\r\nexport const setPhotos = (photos) =>{\r\n    return{\r\n        type: 'SET_PHOTOS',\r\n        photos\r\n    }\r\n}\r\nexport const clearPhotos= () =>{\r\n    return{\r\n        type: 'CLEAR_PHOTOS',\r\n        \r\n    }\r\n}","import React, { Component } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Login from '../container/Login';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\nclass AppNav extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <AppBar position='static' >\r\n          <Toolbar className={this.props.classes.nav}>\r\n              <Typography variant=\"h6\" component=\"h1\" className={this.props.classes.grow}>\r\n                  Mi portfolio\r\n              </Typography>\r\n              <Login />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles({\r\n    grow: {flexGrow:1},\r\n    nav:{\r\n        color: 'white',\r\n        textAlign: 'left'\r\n    }\r\n    \r\n})(AppNav);\r\n","import React from 'react';\r\n\r\nimport Card from '@material-ui/core/Card';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles} from '@material-ui/core/styles';\r\n\r\n\r\n\r\nfunction AlbumCard(props){\r\n \r\n\r\n \r\n  return(  \r\n      \r\n        <Card className= {props.classes.item} onClick={()=> props.setAlbum(props.album)}>\r\n          <CardMedia className={props.classes.media} image={props.album.coverPhotoBaseUrl} />\r\n          <CardContent>\r\n            <Typography variant=\"h5\" component=\"h2\" glutterbottom= \"true\">{props.album.title}</Typography>\r\n            <Typography component=\"p\">{props.album.mediaItemsCount} foto(s)</Typography>\r\n          </CardContent>\r\n        </Card>\r\n     \r\n  );\r\n}\r\n\r\nexport default withStyles ({\r\n    item:{\r\n        minWidth: '350px',\r\n        margin: '1em',\r\n        boxSizing: 'border-box',\r\n        cursor: 'pointer'\r\n    },\r\n    media:{\r\n         minHeight: '200px'\r\n    }\r\n}) (AlbumCard);","import posed from \"react-pose\";\r\n\r\nexport default posed.div({\r\n  enter: {\r\n    opacity: 1,\r\n    height: \"auto\",\r\n    delay: ({ position }) => (position + 3) * 50,\r\n  },\r\n  exit: {\r\n    opacity: 0,\r\n    height: 0,\r\n  },\r\n});\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nimport AlbumCard from \"./AlbumCard\";\r\n\r\nimport { PoseGroup } from \"react-pose\";\r\n\r\nimport Box from \"../animations/Box\";\r\n\r\nfunction AlbumsList(props) {\r\n\r\n  return (\r\n    <Grid container spacing={10} justify=\"center\">\r\n      <PoseGroup>\r\n        {props.albums.map((album, index) => {\r\n          return (\r\n            <Box\r\n              key={index}\r\n              position={index}\r\n              pose={props.mainAlbum ? \"exit\" : \"enter\"}\r\n            >\r\n              <AlbumCard setAlbum={props.setAlbum} album={album} />\r\n            </Box>\r\n          );\r\n        })}\r\n      </PoseGroup>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default withStyles({})(AlbumsList);\r\n","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport axios from 'axios';\r\n\r\nimport {setAlbums, clearAlbums, setAlbum} from '../iniciadores/actions';\r\n\r\nimport AlbumList from '../components/AlbumList';\r\n\r\nclass Albums extends Component {\r\n   \r\n\r\ncomponentDidMount(){\r\n    //this.loadPhotos();\r\n    if(process.env.NODE_ENV === 'production'){\r\n        this.loadPhotos();\r\n    }else{\r\n        import('../data/albums').then(module=>{\r\n            this.props.setAlbums(module.default.albums)\r\n        })\r\n    }\r\n    \r\n}\r\n\r\n    loadPhotos(){\r\n        axios({\r\n          url: 'https://photoslibrary.googleapis.com/v1/albums',\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization':  `Bearer ${this.props.token} `\r\n          }\r\n        }).then(r=>{\r\n            this.props.setAlbums(r.data.albums);\r\n        }).catch(console.log);\r\n      }\r\n\r\n    render(){\r\n        return(<AlbumList \r\n                    mainAlbum={this.props.mainAlbum}  \r\n                    setAlbum={this.props.setAlbum} \r\n                    albums={this.props.albums}\r\n                />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(state) =>({\r\n    albums: state.albums,\r\n    token: state.token,\r\n    mainAlbum: state.mainAlbum\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n    setAlbums,\r\n    clearAlbums,\r\n    setAlbum\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Albums);","import React from \"react\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { PoseGroup } from \"react-pose\";\r\n\r\nimport Box from \"../animations/Box\";\r\n\r\nfunction PhotosCarrousel(props) {\r\n  return (\r\n    <div className={props.classes.container}>\r\n      <PoseGroup>\r\n        {props.photos.map((photo, index) => {\r\n          return (\r\n            <Box key={photo.id} position={index} className={props.classes.card}>\r\n              <Card>\r\n                <img\r\n                  src={photo.baseUrl}\r\n                  className={props.classes.img}\r\n                  alt=\"imagen\"\r\n                />\r\n                <CardContent>\r\n                  <Typography variant=\"caption\" component=\"p\">\r\n                    {photo.filename}\r\n                  </Typography>\r\n                </CardContent>\r\n              </Card>\r\n            </Box>\r\n          );\r\n        })}\r\n      </PoseGroup>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withStyles({\r\n  container: {\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n    padding: \"1em 0\",\r\n  },\r\n  img: {\r\n    maxWidth: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n  card: {\r\n    minWidth: \"300px\",\r\n    marginRight: \"1em\",\r\n  },\r\n})(PhotosCarrousel);\r\n","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport PhotosCarrousel from './PhotosCarrousel';\r\n\r\nfunction PhotosList(props) {\r\n\r\nfunction clear(){\r\n  props.clearAlbum()\r\n  props.clearPhotos()\r\n\r\n}\r\n  return (\r\n    <div className={props.classes.topSpace}>\r\n    {props.album && [\r\n      <Typography key='album-tittle' variant=\"h4\" component=\"h2\">{props.album ? props.album.title : \"\"}</Typography>,\r\n      <Button key='back-button' onClick={clear}>Regresar Atras</Button>,\r\n      <Typography key='album-subtittle' variant=\"subtitle2\" component=\"h3\">Fotos del album</Typography>,\r\n      <Typography key='album-caption'variant=\"caption\" component=\"p\"> {props.photos.length} Foto(s) en este album</Typography>,\r\n      \r\n    ]\r\n    } \r\n    <PhotosCarrousel photos={props.photos} />\r\n    </div>\r\n     \r\n  );\r\n}\r\n\r\nexport default withStyles({\r\n  topSpace:{\r\n    marginTop: '2em'\r\n  }\r\n})(PhotosList);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from \"axios\";\r\n\r\nimport { setPhotos, clearPhotos, clearAlbum } from \"../iniciadores/actions\";\r\n\r\nimport PhotosList from \"../components/PhotosList\";\r\n\r\nclass Album extends Component {\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.mainAlbum && this.props.mainAlbum !== prevProps.mainAlbum)\r\n      if (process.env.NODE_ENV === \"production\") {\r\n        this.loadPhotos();\r\n      } else {\r\n        import(\"../data/photos\").then((module) => {\r\n          this.props.setPhotos(module.default.mediaItems);\r\n        });\r\n      }\r\n  }\r\n\r\n  loadPhotos() {\r\n    axios({\r\n      method: \"POST\",\r\n      url: \"https://photoslibrary.googleapis.com/v1/mediaItems:search\",\r\n      headers: {\r\n        Authorization: `Bearer ${this.props.token} `,\r\n      },\r\n      data: {\r\n        albumId: this.props.mainAlbum.id,\r\n      },\r\n    }).then((r) => {\r\n      console.log(r);\r\n      this.props.setPhotos(r.data.mediaItems);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <PhotosList\r\n        clearAlbum={this.props.clearAlbum}\r\n        clearPhotos={this.props.clearPhotos}\r\n        album={this.props.mainAlbum}\r\n        photos={this.props.photos}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStatetoProps = (state) => ({\r\n  mainAlbum: state.mainAlbum,\r\n  token: state.token,\r\n  photos: state.photos,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setPhotos,\r\n  clearAlbum,\r\n  clearPhotos,\r\n};\r\n\r\nexport default connect(mapStatetoProps, mapDispatchToProps)(Album);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nimport AppNav from './components/AppNav';\nimport Albums from './container/Albums';\nimport Album from './container/Album';\n\nclass App extends Component {\n \n  \n\n  render() {\n  return (\n    <div className=\"App\">\n   \n      <AppNav />\n      <Album />\n     \n      <Albums />\n\n      \n      \n\n   </div>\n  );\n}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {createStore, combineReducers, compose} from 'redux';\r\nimport persistState from 'redux-localstorage';\r\n\r\nfunction tokenReducer(state='', action){\r\n    switch (action.type) {\r\n        case 'SET_TOKEN':\r\n            return action.token;\r\n        case 'CLEAR_TOKEN': \r\n        return ''\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nfunction userReducer(state=null, action){\r\n    switch (action.type) {\r\n        case 'LOGGED_IN':\r\n            return action.user;\r\n        case 'SIGN_OUT': \r\n        return null;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n} \r\n\r\nfunction albumsReducer(state=[], action){\r\n    switch (action.type) {\r\n        case 'SET_ALBUMS':\r\n            return action.albums;\r\n        case 'CLEAR_ALBUMS': \r\n        return [];\r\n        default:\r\n            return state;\r\n    }\r\n\r\n} \r\nfunction albumReducer(state=null, action){\r\n    switch (action.type) {\r\n        case 'SET_ALBUM':\r\n            return action.album;\r\n        case 'CLEAR_ALBUM': \r\n        return null;\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nfunction photosReducer(state=[], action){\r\n    switch (action.type) {\r\n        case 'SET_PHOTOS':\r\n            return action.photos;\r\n        case 'CLEAR_PHOTOS': \r\n        return [];\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\nlet rootReducer = combineReducers({\r\n    token: tokenReducer,\r\n    user: userReducer,\r\n    albums: albumsReducer,\r\n    mainAlbum: albumReducer,\r\n    photos: photosReducer\r\n});\r\n\r\nlet mainEnhancer = compose(persistState('token'))\r\n\r\nexport default createStore(rootReducer, {}, mainEnhancer);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './iniciadores/store';\n\nimport firebase from './iniciadores/firebase';\nimport{setUser} from './iniciadores/actions';\nimport{clearUser} from './iniciadores/actions';\n\n\nfirebase.auth().onAuthStateChanged((user) => {\n  if (user) {\n    store.dispatch(setUser(user));\n    \n  }else{\n    store.dispatch(clearUser());\n      }\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}